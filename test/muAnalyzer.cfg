process Rec = {

 include "FWCore/MessageLogger/data/MessageLogger.cfi"
 include "CondCore/DBCommon/data/CondDBSetup.cfi"


 #
 ### input
 #

    source = PoolSource {
       untracked vstring fileNames = 
       {'file:raw.root'}
    }
    untracked PSet maxEvents = {untracked int32 input = 50}


 #
 ## DQM
 #

  service = DaqMonitorROOTBackEnd{ }

  # DQM Online File saver module
  #### PUT THIS MODULE INTO YOUR PATH FOR OPERATION AT P5
  module dqmSaver = DQMFileSaver {
        # subsystem name (appears in filename)
        # default is: filename is taken from SourceName
        #             (toplevel of me-dir-tree) fixme
        untracked string fileName = "SubsystemName"
	# environment flag (default: "Online")
	//# FIXME should be implemented in dbe::save first
        untracked string environment = "Online"
        # Save file every N lumi sections (-1: disabled)
        untracked int32 prescaleLS = -1
        # Save file every N events (-1: disabled)
        untracked int32 prescaleEvt = -1
        # Save file every N minutes (-1: disabled)
        untracked int32 prescaleTime = -1
        # Save at end of run, runnumber in filename (default: true)
        untracked bool saveAtRunEnd = true
        # Save at end of job, no runnumber in filename (default: false)
        untracked bool saveAtJobEnd = false
  }

  service = DQMShipMonitoring{
  #  // event-period for shipping monitoring to collector (default: 25)
     untracked uint32 period = 500
  }


  service = Timing {}

  ### Conditions:
  #include "Configuration/GlobalRuns/data/FrontierConditionsGR.cff"
  ## Conditions (Global Tag is used here):
  include "Configuration/GlobalRuns/data/FrontierConditionsGRGlobalTag.cff"
  replace GlobalTag.connect = "oracle://cms_orcoff_int2r/CMS_COND_GENERAL"
  replace GlobalTag.DBParameters.authenticationPath="/afs/cern.ch/cms/DB/conddb"
  replace GlobalTag.timetype = "runnumber"
  replace GlobalTag.globaltag = "GRUMM::All"

  ### Magnetic fiuld: force mag field to be 0.0 tesla
  include "Configuration/GlobalRuns/data/ForceZeroTeslaField.cff"

  ## reconstruction sequence for Global Run
  include "Configuration/GlobalRuns/data/ReconstructionGR.cff"

  ## offline raw to digi
  include "Configuration/GlobalRuns/data/RawToDigiGR.cff"

  module testMagneticField = testMagneticField {}

  include "DQMOffline/Muon/data/MuAnalyzer.cfi"

 #
 ### output module
 #

   module FEVT = PoolOutputModule {
	untracked string fileName = 'reco-grumm.root'
    }
   untracked PSet options = {
        untracked bool wantSummary = true  # default is false
    }


    path allPath = { testMagneticField, RawToDigi, reconstructionGR, muonAnalyzer }

    endpath outpath = {FEVT}

}
